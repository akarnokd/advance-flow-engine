/*
 * Copyright 2010-2012 The Advance EU 7th Framework project consortium
 *
 * This file is part of Advance.
 *
 * Advance is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation, either version 3 of
 * the License, or (at your option) any later version.
 *
 * Advance is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with Advance.  If not, see
 * <http://www.gnu.org/licenses/>.
 *
 */
package eu.advance.logistics.flow.editor.actions;

import eu.advance.logistics.flow.editor.BlockRegistry;
import eu.advance.logistics.flow.editor.XTypeEditor;
import eu.advance.logistics.flow.model.AdvanceType;
import eu.advance.logistics.xml.typesystem.XType;
import java.awt.BorderLayout;
import java.beans.PropertyEditorManager;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.Collections;
import org.openide.explorer.ExplorerManager;
import org.openide.explorer.view.TreeTableView;
import org.openide.nodes.AbstractNode;
import org.openide.nodes.Children;
import org.openide.nodes.Node;
import org.openide.nodes.Node.Property;
import org.openide.nodes.Sheet;
import org.openide.util.Exceptions;

/**
 *
 * @author TTS
 */
public class ParameterDescriptionDialog extends javax.swing.JDialog implements ExplorerManager.Provider {

    private TreeTableView view = new TreeTableView();
    private ExplorerManager explorerManager = new ExplorerManager();

    /** Creates new form ParameterDescriptionDialog */
    public ParameterDescriptionDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();

        PropertyEditorManager.registerEditor(XType.class, XTypeEditor.class);

        Property[] props = new Property[2];
        props[0] = AdvanceTypeProperty.variableNameProperty(null);
        props[1] = AdvanceTypeProperty.typeProperty(null);
        //props[2] = AdvanceTypeProperty.uriProperty(null);

        AdvanceType a2 = new AdvanceType();
        a2.type = null;
        a2.typeURI = null;
        a2.typeVariableName = "T";

        AdvanceType a1 = new AdvanceType();
        a1.type = BlockRegistry.getInstance().getXTypes().get("collection");
        try {
            a1.typeURI = new URI("advance:collection");
        } catch (URISyntaxException ex) {
            Exceptions.printStackTrace(ex);
        }
        a1.typeVariableName = null;
        a1.typeArguments.add(a2);

        view.setProperties(props);
        jPanel1.setLayout(new BorderLayout());
        jPanel1.add(view, BorderLayout.CENTER);

        explorerManager.setRootContext(new AdvanceTypeNode(a1));
    }

    static class AdvanceTypeNode extends AbstractNode {

        private AdvanceType parent;

        public AdvanceTypeNode(AdvanceType parent) {
            super(new AdvanceTypeChildren(parent));
            this.parent = parent;
            setDisplayName("AdvanceType");
        }

        @Override
        protected Sheet createSheet() {
            Sheet s = super.createSheet();
            Sheet.Set ss = s.get(Sheet.PROPERTIES);
            if (ss == null) {
                ss = Sheet.createPropertiesSet();
                s.put(ss);
            }
            ss.put(AdvanceTypeProperty.variableNameProperty(parent));
            ss.put(AdvanceTypeProperty.typeProperty(parent));
            ss.put(AdvanceTypeProperty.uriProperty(parent));
            return s;
        }
    }

    static class AdvanceTypeChildren extends Children.Keys<AdvanceType> {

        private AdvanceType parent;

        public AdvanceTypeChildren(AdvanceType parent) {
            this.parent = parent;
        }

        @Override
        protected void addNotify() {
            super.addNotify();
            setKeys(parent.typeArguments);
        }

        @Override
        protected void removeNotify() {
            super.removeNotify();
            setKeys(Collections.EMPTY_SET);
        }

        @Override
        protected Node[] createNodes(AdvanceType key) {
            return new Node[]{new AdvanceTypeNode(key)};
        }
    }

    @Override
    public ExplorerManager getExplorerManager() {
        return explorerManager;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        okButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText(org.openide.util.NbBundle.getMessage(ParameterDescriptionDialog.class, "ParameterDescriptionDialog.jLabel1.text")); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 380, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 217, Short.MAX_VALUE)
        );

        okButton.setText(org.openide.util.NbBundle.getMessage(ParameterDescriptionDialog.class, "ParameterDescriptionDialog.okButton.text")); // NOI18N
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addContainerGap())
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addGap(366, 366, 366)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(okButton)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(okButton)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
    dispose();
}//GEN-LAST:event_okButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton okButton;
    // End of variables declaration//GEN-END:variables
}
